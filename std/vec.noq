vec_add_one :: (A#, ..) + N# = (A# + N#, ..)

vec_add     :: (A#, ..) + (B#, ..) = (A# + B#, ..)

vec_dot     :: (A#, ..) . (B#, ..) = (A# * B#, +..)

intersperse :: ((A, ..), (B, ..)) = (A, B, ..)

mat2x2_dot :: ((A, B), (C, D)).((W, X), (Y, Z)) = ((A*W + B*Y, A*Z + B*Z), (C*W + D*Y, C*X + D*Z))

//matn_test :: ((A, B), (C, D), ..) . ((W, X), (Y, Z), ..) = ((A * W + B * Y, A * Z + B * Z, ..), (C * W + D * Y, C * X + D * Z, ..))

// ((1, 2), (3, 4), (5, 6), (7, 8)) . ((1, 2), (3, 4), (5, 6), (7, 8))

mat4x2_dot ::
    (
        (A1, A2), (A3, A4),
        (A5, A6), (A7, A8)
    ) . (
        (B1, B2), (B3, B4),
        (B5, B6), (B7, B8)
    ) = (
        (A1 * B1 + A2 * B5), (A1*B2+A2*B6), (A1*B3+A2*B7), (A1*B4+A2*B8),
        (A3 * B1 + A4 * B5), (A3*B2+A4*B6), (A3*B3+A4*B7), (A3*B4+A4*B8),
        (A5 * B1 + A6 * B5), (A5*B2+A6*B6), (A5*B3+A6*B7), (A5*B4+A6*B8),
        (A7 * B1 + A8 * B5), (A7*B2+A8*B6), (A7*B3+A8*B7), (A7*B4+A8*B8)
    )

matn_Nx2 ::
    (
        (A, ..), (B, ..)
    ) . (
        (C, ..), (D, ..)
    ) = (
        (A * D, +..)
    )